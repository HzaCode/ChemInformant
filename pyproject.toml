# =========================================================
#          pyproject.toml for ChemInformant
# =========================================================

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ChemInformant"
version = "2.4.3"
authors = [
  { name = "Zhiang He", email = "ang@hezhiang.com" },
]
description = "A robust and high-throughput Python client for the PubChem API, designed for automated data retrieval and analysis"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Chemistry",
]
keywords = [
    "chemistry", "cheminformatics", "pubchem", "api", "compound", "drug",
    "cache", "pydantic", "batch", "smiles", "sql"
]

# ---------------------------
#  Core runtime dependencies
# ---------------------------
dependencies = [
    "requests>=2.25.0",
    "requests-cache>=1.2.0",
    "pydantic>=2.0",
    "pandas>=1.5.0",
    "sqlalchemy>=1.4",
    "pystow>=0.7"            
]

[project.scripts]
chemfetch = "ChemInformant.cli:main_fetch"
chemdraw  = "ChemInformant.cli:main_draw"

[project.urls]
Homepage       = "https://github.com/HzaCode/ChemInformant"
Documentation  = "https://github.com/HzaCode/ChemInformant#readme"
Issues         = "https://github.com/HzaCode/ChemInformant/issues"

# ---------------------------
#  Optional / dev extras
# ---------------------------
[project.optional-dependencies]
plot = [
    "matplotlib>=3.1",
    "Pillow>=10",
    "seaborn>=0.12",
    "scikit-learn>=1.1"
]

all = [
    "ChemInformant[plot]"
]

dev = [
    "pytest>=7.0",
    "pytest-mock>=3.5",
    "pytest-cov>=2.12",
    "pytest-benchmark>=4.0",
    "ruff",
    "mypy"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.coverage.run]
source = ["ChemInformant"]

# ---------------------------
#  Ruff configuration
# ---------------------------
[tool.ruff]
# Set line length to match black formatter
line-length = 88
target-version = "py39"

[tool.ruff.lint]
# Enabled rule sets, replacing multiple tools:
# E, W: pycodestyle (replaces flake8)
# F: pyflakes (replaces flake8)
# I: isort (replaces isort)
# N: pep8-naming
# UP: pyupgrade
# B: flake8-bugbear
# C4: flake8-comprehensions
# SIM: flake8-simplify
select = ["E", "W", "F", "I", "N", "UP", "B", "C4", "SIM"]

# Ignored rules
ignore = [
    "E501",  # Line length handled by formatter
    "N999",  # Invalid module name (ChemInformant is a valid name)
    "N813",  # Camelcase imported as lowercase (common for packages)
    "SIM117", # Multiple context managers (sometimes clearer as nested)
]

[tool.ruff.lint.isort]
# isort configuration
known-first-party = ["ChemInformant"]

[tool.ruff.format]
# Format configuration, replaces black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# ---------------------------
#  MyPy configuration
# ---------------------------
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests_cache.*",
    "pubchempy.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "PIL.*"
]
ignore_missing_imports = true
